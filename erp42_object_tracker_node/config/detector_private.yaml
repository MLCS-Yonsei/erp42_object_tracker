detect: {
    roi: {
        ## ROI range
        # type: true, float, float, float
        # default: 60.0,999.0,999.0 in SegMatch
        # default: "Cylinder"(0,60)
        # roi_type: "Cylinder",
        # roi_type: "Square",
        roi_type: "DoubleSquare",

        # Voxel Grid Downsampling
        voxel_size: 0.05,
        min_point_per_voxel: 5,

        # ROI filter needs lidar installed height
        roi_lidar_height_m: 0.71,
        
        ## Horizontal range
        #--- for "Cylinder"
        # roi_radius_min_m: 0.6,
        # roi_radius_max_m: 25.,
        #--- for "Square"
        # roi_radius_min_m: 3., # side
        # roi_radius_max_m: 15., # forward/backward
        #--- for "DoubleSquare"
        roi_radius_min_m: 5., # side 3
        roi_radius_max_m: 20., # forward 15
        roi_radius_max_rear_m: 8., # backward 5
        roi_car_front_m: 2.0, # front car length from lidar 2.0
        roi_car_rear_m: 1.0, # rear car length from lidar 1.0
        roi_car_side_m: 1.0, # side car length from lidar 1.9

        # Vertical range
        roi_height_below_m: 0.5, # under ground
        roi_height_above_m: 1.0,
    },

    Segmenter: {
        #---------------------------------------- Ground Segmenter
        ## default: Ground Plane Fitting Segmenter

        ### Ground Plane Fitting Segmenter
        ## in Paper: Nsegs=3/Niter=3/Nlpr=20/THseeds=0.4m/THdist=0.2m
        #gpf_sensor_model: 64,
        gpf_sensor_height: 0.71,
        # fitting multiple planes, at most 6 segments
        ## default: 1
        #gpf_num_segment: 1,
        gpf_num_segment: 3,
        # number of iterations
        gpf_num_iter: 5,
        ## number of points used to estimate the lowest point representative(LPR)
        # double of senser model???
        #gpf_num_lpr: 20,
        gpf_num_lpr: 128,
        #gpf_num_lpr: 1280,
        gpf_th_lprs: 0.08,
        # threshold for points to be considered initial seeds
        gpf_th_seeds: 0.1,
        #gpf_th_seeds: 0.5,
        # ground points threshold distance from the plane <== large to guarantee safe removal
        gpf_th_gnds: 0.23, # normally 0.15~0.23

        #---------------------------------------- Non-ground Segmenter
        # default: Region Euclidean Cluster Segmenter

        ### Region Euclidean Cluster Segmenter
        ## regions' size list
        # type: std::vector<int>
        # default: 14
        rec_region_size: 5,
        # sumation of sizes must be similiar to roi (max-min) range)
        # rec_region_sizes: [0.5, 1, 1, 2, 10],
        # rec_region_sizes: [1, 2.7, 2.8, 2.8, 2.9, 2.9],
        rec_region_sizes: [2, 3, 3, 3, 3],
        # the same as euclidean distance tolerence for ECE
        rec_region_initial_tolerrance: 0.4, # 0.1 * (voxel size / vertical resolution)
        ## increase euclidean distance tolerence between adjacent region
        # type: float
        # default: 0.2
        rec_region_delta_tolerance: 0.4,
        ## minimum/maximum cluster's point number
        # type: int
        rec_min_cluster_size: 5, # 10
        rec_max_cluster_size: 800, # 400
        
        ## Clusters merged between regions
        # type: bool
        # default: false
        rec_use_region_merge: true,
        ## Merge corresponding ground box overlap IoU threshold
        # type: float
        # default: 0., merge if there is overlap
        rec_region_merge_tolerance: 0.,

    },
}
